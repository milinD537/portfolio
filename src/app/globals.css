@tailwind base;
@tailwind components;
@tailwind utilities;

@property --imageHoverColorStop {
	syntax: "<percentage>";
	inherits: false;
	initial-value: 0%;
}

:root {
	--foreground-rgb: 0, 0, 0;
	--background-start-rgb: 214, 219, 220;
	--background-end-rgb: 255, 255, 255;

	--background: hsl(274, 75%, 3%);
}

/* Main */
body {
	cursor: url(/public/images/cursor/default.png) 0 0, auto;
	/* cursor: pointer; */
}

.heroTwo {
	clip-path: circle(0%);
	animation: circleReveal linear forwards;
	animation-timeline: scroll();
	animation-range: 0 100vh;
}

@keyframes circleReveal {
	to {
		clip-path: circle(100%);
	}
}

.gridBgWrapper {
	--blockSize: calc(25vw);
	--borderWidth: 2px;
	--borderColor: hsl(0, 0%, 100%, 0.1);
	--bgColor: var(--background);

	perspective: 1800px;
	overflow: hidden;

	& * {
		transform-style: preserve-3d;
	}
}

.gridBg {
	position: absolute;
	inset: -200vmax;
	background-attachment: fixed;
	background-color: var(--bgColor);
	background-image: linear-gradient(
			transparent calc(var(--blockSize) - var(--borderWidth)),
			var(--borderColor) calc(var(--blockSize) - var(--borderWidth))
		),
		linear-gradient(
			90deg,
			transparent calc(var(--blockSize) - var(--borderWidth)),
			var(--borderColor) calc(var(--blockSize) - var(--borderWidth))
		);

	background-size: var(--blockSize) var(--blockSize),
		var(--blockSize) var(--blockSize);
	/* background-repeat: round; */
	/* background-position-x: calc(var(--blockSize) * 0.5 * -1); */
	/* animation: gridBgMove 3s infinite linear; */
	transform-origin: center;
	transform: rotateX(60deg);
}
.gridBgFade {
	background-image: linear-gradient(
			0deg,
			var(--background) 5%,
			transparent 25%
		),
		linear-gradient(-60deg, var(--background) 10%, transparent 25%),
		linear-gradient(-30deg, var(--background) 10%, transparent 25%),
		linear-gradient(60deg, var(--background) 10%, transparent 25%),
		linear-gradient(30deg, var(--background) 10%, transparent 25%);
}

@keyframes gridBgMove {
	to {
		background-position-y: var(--blockSize), var(--blockSize);
	}
}

/* .bgGridWrapperTwo.horizontal {
	--direction: to bottom;
	mask-image: linear-gradient(hsl(0 0% 0% / 0.1), hsl(0 0% 0% / 0.1));
}
.bgGridWrapperTwo.vertical {
	--direction: to right;
	--trailHeight: 3;
	--lineOne: 2;
	--lineTwo: 6;
	--lineThree: 10;
	mask-image: linear-gradient(hsl(0 0% 0% / 0.1), hsl(0 0% 0% / 0.1)),
		linear-gradient(hsl(0 0% 0% / 0.1), hsl(0 0% 0% / 1)),
		linear-gradient(hsl(0 0% 0% / 0.1), hsl(0 0% 0% / 1)),
		linear-gradient(hsl(0 0% 0% / 0.1), hsl(0 0% 0% / 1));
	mask-size: 100%,
		var(--borderWidth) calc(var(--blockSize) * var(--trailHeight)),
		var(--borderWidth) calc(var(--blockSize) * var(--trailHeight)),
		var(--borderWidth) calc(var(--blockSize) * var(--trailHeight));
	-webkit-mask-position-x: 0,
		calc((var(--blockSize) * var(--lineOne)) - var(--borderWidth)),
		calc((var(--blockSize) * var(--lineTwo)) - var(--borderWidth)),
		calc((var(--blockSize) * var(--lineThree)) - var(--borderWidth));
	mask-repeat: no-repeat;
	animation: gridMaskMove 12s linear infinite;
}
.bgGridWrapperTwo {
	--blockSize: 32px;
	--borderWidth: 2px;

	width: 100%;
	height: 100%;
	background-image: linear-gradient(
			var(--bgColor),
			transparent 25% 75%,
			var(--bgColor)
		),
		linear-gradient(
			var(--direction),
			transparent calc(var(--blockSize) - var(--borderWidth)),
			var(--borderColor) calc(var(--blockSize) - var(--borderWidth))
		);
	background-size: 100%, var(--blockSize) var(--blockSize);
}

.heroTwo {
	--bgColor: hsl(229, 84%, 5%);
	--borderColor: hsl(233, 60%, 40%);
	background-color: var(--bgColor);
}

@keyframes gridMaskMove {
	from {
		-webkit-mask-position-y: 0,
			calc(var(--trailHeight) * var(--blockSize) * -1);
	}
	50% {
		-webkit-mask-position-y: 0,
			calc(var(--trailHeight) * var(--blockSize) * -1),
			calc(100% + (var(--trailHeight) * var(--blockSize))),
			calc(var(--trailHeight) * var(--blockSize) * -1);
	}
	80% {
		-webkit-mask-position-y: 0,
			calc(80% + (var(--trailHeight) * var(--blockSize))),
			calc(100% + (var(--trailHeight) * var(--blockSize))),
			calc(var(--trailHeight) * var(--blockSize) * -1);
	}
	100% {
		-webkit-mask-position-y: 0,
			calc(100% + (var(--trailHeight) * var(--blockSize))),
			calc(100% + (var(--trailHeight) * var(--blockSize))),
			calc(100% + (var(--trailHeight) * var(--blockSize)));
	}
} */

/* Text Hover Effect */
/* .textHoverEffect {
	z-index: 1;
}
.textHoverEffect > div {
	width: 100%;
	text-align: center;
	font-family: "Noto Sans", sans-serif;
	user-select: none;
}
.textHoverEffect span {
	--add: 0;
	display: inline-block;
	line-height: 100%;
	cursor: crosshair;
	font-weight: calc(300 + 600 * var(--add));
	font-variation-settings: "wdth" calc(62.5 + 37.5 * var(--add));
	text-transform: uppercase;
	font-size: clamp(4.5rem, 12.5vw + 1px, 10rem);
	color: hsl(99deg, 1%, calc(90% + 20% * var(--add)));
	text-shadow: 0 0 max(25px, 1.3020833333vw) hsla(0, 0%, 100%, 0.8);
	transition: font-weight 0.25s, font-variation-settings 0.25s;
}
.textHoverEffect span:hover {
	--add: 1;
}
.textHoverEffect span:hover + span,
.textHoverEffect span:has(+ span:hover) {
	--add: 0.5;
}
.textHoverEffect span:hover + span + span,
.textHoverEffect span:has(+ span + span:hover) {
	--add: 0.25;
} */

.linkIcon {
	background-image: linear-gradient(
			-45deg,
			transparent calc(50% - 1px),
			black calc(50% - 1px) calc(50% + 1px),
			transparent calc(50% + 1px)
		),
		linear-gradient(black 2px, transparent 2px),
		linear-gradient(-90deg, black 2px, transparent 2px);
}

.linkUnderline:hover::before,
.linkIcon:hover + .linkUnderline::before {
	transform: translateX(0%);
}
.projectCard:hover::before {
	opacity: 1;
}
.projectCard > .image > img:last-of-type {
	--imageHoverColorStop: 0%;
	transition: --imageHoverColorStop 0.5s;
	mask-image: linear-gradient(
		-25deg,
		transparent var(--imageHoverColorStop),
		black 0%
	);
}
.projectCard > .image > img:last-of-type:hover {
	--imageHoverColorStop: 100%;
}

@keyframes scrollIconBounce {
	0%,
	45%,
	100% {
		transform: translateY(0);
		animation-timing-function: ease-in;
	}
	30%,
	60% {
		transform: translateY(50%);
		animation-timing-function: ease-out;
	}
}
